#lang css

@charset "utf-8";

/**
 * This file defines the default theme for using in docx/xlsx/pptx
 *
 * The OpenXML Specification defines the hierarchical tree of a theme:
 *   - theme
 *     - themeElements
 *       - clrScheme
 *       - fontScheme
 *       - fmtScheme
 *         - fillStyleLst
 *         - lnStyleLst
 *         - effectStyleLst
 *         - bgFillStyleLst
 *     - objectDefaults
 *     - extraClrSchemeLst
 *     - extLst
 *       - thm15:themeFamily
 *
 * By convention, from the perspective of the favored CSS engine, the root element of a theme is the name of dialect of Scribble,
 *   without prefix `scribble/`, that is to say, you could make your theme varying from scribble/base to scribble/manual to others.
 *
 * NOTE that, the reason why we employ CSS as the styling language is that
 *   the syntax of XML is a piece of shit, however the OpenXML employed by MS Office is even more cumbersome,
 *   as such, the logic structure of the favored CSS engine is just as distinct as it should be.

 * A color can be one of CSS colors, OpenXML colors, and OpenXML color transforms.
 *   * If a color can be represented by both CSS color and OpenXML color, please use CSS color representation;
 *   * The OpenXML scheme colors are representated as CSS keywords; 
 *   * Other supported OpenXML colors are represented as functions, whose names are exactly what they've been defined in OpenXML References,
 *   *   like `sysClr`;
 *   * The OpenXMl color tranformations are represented as the function `clrTransform(color, tranforms ...)`, where
 *       `transforms` are also representated as functions: alpha, red, green, blue, hue, sat, lum.  
 *
 *   The OpenXML keyword `phClr` is equivalent to the CSS keyword `currentcolor`
 *   The OpenXML keywords are case sensitive, and so are their corresponding CSS keywords
 */

/* The namespace is optional and will never be mapped to the `xmlns` attribute of `a:theme` */
@namespace theme url(github.com/wargrey/mox/docx);

:root {
  --panose: #020F0302020204030204;
}

/**
 * clrScheme
 *
 * This scheme is just straightforward
 * There should be at least 12 properties defined as colors
 */

clrScheme {
  dk1:      sysClr(windowText #000000);
  lt1:      sysClr(window     #FFFFFF);
  dk2:      #44546A;
  lt2:      #E7E6E6;

  accent1:  #4472C4;
  accent2:  #ED7D31;
  accent3:  #A5A5A5;
  accent4:  #FFC000;
  accent5:  #5B9BD5;
  accent6:  #70AD47;
  
  hlink:    #0563C1;
  folHlink: #954F72;
}

/**
 * fillStyleLst and bgFillStyleLst
 *
 * These schemes are associated with the element `fillStyle`
 * Both of them are lists and containing 3 styles, `subtle`, `moderate`, and `intense`, which are selected as IDs
 * Besides, `bgFillStyleLst` is defined as a `fillStyle` element classified as `background`, while
 *   `fillStyleLst` itself is classified as `shape`. As such, a `fillStyle` selector without ID
 *   and/or class parts can be used to share common properties.
 *
 * Properties of `fillStyle` work in a way similar to the `union` of the C language, where `type` refers to
 *   another property with the same name as its value, except
 *   * `group`, corresponding to `grpFill`, and
 *   * `none`, corresponding to `noFill`.
 */

fillStyle#subtle { /* for both .shape and .background */
  type: solid;
  solid: phClr;
}

/**
 * fontScheme
 *
 * There are two groups of font scheme and are assigned to id `#head`(a.k.a majorFont) and `#body`(a.k.a minorFont), respectively.
 * For each group of font scheme, there should be upto 3 general categories of typefaces,
 *   plus detialed preferences for specific natural languages.
 */

fontScheme {
  /* `latin` is defined separately */
  ea: ""; /* east asian */
  cs: ""; /* complex script */

  Hang: "맑은 고딕";
  Hant: "新細明體";
  
  Knda: "Tunga";
  Guru: "Raavi";
  Cans: "Euphemia";
  Cher: "Plantagenet Cherokee";
  Yiii: "Microsoft Yi Baiti";
  Tibt: "Microsoft Himalaya";
  Thaa: "MV Boli";
  Deva: "Mangal";
  Telu: "Gautami";
  Taml: "Latha";
  Syrc: "Estrangelo Edessa";
  Orya: "Kalinga";
  Mlym: "Kartika";
  Laoo: "DokChampa";
  Sinh: "Iskoola Pota";
  Mong: "Mongolian Baiti";
  
  Uigh: "Microsoft Uighur";
  Geor: "Sylfaen";
  Armn: "Arial";
  Bugi: "Leelawadee UI";
  Bopo: "Microsoft JhengHei";
  Java: "Javanese Text";
  Lisu: "Segoe UI";
  Mymr: "Myanmar Text";
  Nkoo: "Ebrima";
  Olck: "Nirmala UI";
  Osma: "Ebrima";
  Phag: "Phagspa";
  Syrn: "Estrangelo Edessa";
  Syrj: "Estrangelo Edessa";
  Syre: "Estrangelo Edessa";
  Sora: "Nirmala UI";
  Tale: "Microsoft Tai Le";
  Talu: "Microsoft New Tai Lue";
  Tfng: "Ebrima";
}

fontScheme#head {
  latin: panose("Calibri Light" var(--panose));

  Jpan: "游ゴシック Light";
  Hans: "等线 Light";
       
  Arab: "Times New Roman";
  Hebr: "Times New Roman";
  Thai: "Angsana New";
  Khmr: "MoolBoran";
  Viet: "Times New Roman";
}

fontScheme#body {
  latin: panose("Calibri" var(--panose));

  Jpan: "游明朝";
  Hans: "等线";
  
  Arab: "Arial";
  Hebr: "Arial";
  Thai: "Cordia New";  
  Khmr: "DaunPenh";
  Viet: "Arial";
}
